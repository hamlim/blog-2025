/// <reference types="bun" />
import topPostPaths from "#/top-posts.json";
import { collectMetadata, getMDXFiles } from "./collect-metadata";

import type { RawFrontmatter } from "#/types";

let metadataPath = "./src/metadata.gen.ts";

export async function generateMetadata() {
  // metadata.gen.ts:
  let contents = `/* Autogenerated file */
/* do not edit */

import type { RawFrontmatter } from "#/types";
`;

  let mdxFiles = await getMDXFiles();

  let metadata = await collectMetadata(mdxFiles);

  contents += `
export let metadata: Array<RawFrontmatter> = ${JSON.stringify(
    metadata,
    null,
    2,
  )};`;

  await Bun.write(metadataPath, contents);

  // collections/top-posts.gen.ts

  let topPosts = topPostPaths
    .map((path) => metadata.find((post) => post.path === path))
    .filter((post): post is RawFrontmatter => post !== undefined);

  await Bun.write(
    "./src/collections/top-posts.gen.ts",
    `/* Autogenerated file */
/* do not edit */

export let topPosts = ${JSON.stringify(topPosts, null, 2)}`,
  );
}
